---
name: factory
description: Creates a new template-based factory definition. This meta-factory allows you to define factories using simple templates with {{variable}} placeholders.
params:
  name:
    type: string
    description: Unique name for the factory (e.g., 'react_component')
    required: true
  description:
    type: string
    description: Human-readable description of what the factory does
    required: true
  template:
    type: string
    description: Code template with {{variable}} placeholders that will be replaced with parameter values
    required: true
  outputPath:
    type: string
    description: Optional file path template (e.g., 'src/{{componentName}}.ts'). Can use same {{variables}} as template.
    required: false
  paramDescriptions:
    type: Record<string, string>
    description: Object mapping parameter names to their descriptions. Template variables are auto-detected.
    required: false
examples:
  - name: typescript_function
    description: Creates a TypeScript function
    template: |
      export function {{functionName}}({{params}}): {{returnType}} {
        {{body}}
      }
    outputPath: src/{{functionName}}.ts
    paramDescriptions:
      functionName: Name of the function
      params: Function parameters
      returnType: Return type
      body: Function body
  - name: react_component
    description: Creates a React functional component
    template: |
      export function {{componentName}}(props: {{componentName}}Props) {
        return <div>{{content}}</div>;
      }
    outputPath: src/components/{{componentName}}.tsx
    paramDescriptions:
      componentName: Name of the component
      content: JSX content
---
import { defineFactory } from "@codefactory/core";

/**
 * {{description}}
 * 
 * Generated by: factory meta-factory
 * Factory name: {{name}}
 */
export const {{factoryConstName}} = defineFactory({
  name: "{{name}}",
  description: "{{description}}",
  template: `{{{template}}}`,
{{#if outputPath}}
  outputPath: "{{{outputPath}}}",
{{/if}}
{{#if params}}
  params: {
{{#each params}}
    {{@key}}: {
      description: "{{{this.description}}}",
      required: {{this.required}},
    },
{{/each}}
  },
{{/if}}
});